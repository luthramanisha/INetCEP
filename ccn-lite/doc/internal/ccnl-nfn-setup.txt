/*
 * @f doc/ccnl_nfn_setup.txt
 * @b description of the ccnl nfn system
 *
 * Copyright (C) 2012-13, Christian Tschudin, University of Basel
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * File history:
 * 2014-08-12  created <christopher.scherb@unibas.ch>
 */

//----------------------------------------------------------------------------

NFN is an extension to the CCNx to deliver dynamic created content and compute results out of input data.
The NFN system consists of two additional layer which are created on top of the CCN system:
	
	Service Layer
	NFN Layer
	CCN Layer

The NFN Layer is for distributing computations over the network, while the Service Layer computes results.
The NFN Layer is directly included into the CCN system.
To compile a CCN-lite-relay with integrated NFN system one can use the Makefile target 
	ccn-nfn-relay
or
	ccn-nfn-relay-nack.

The NFN system can compute operations on numbers by itself.
To request a result of a computation you can use util/ccn-lite-peek, e.g. ./util/ccn-lite-peek "add 2 3|NFN",
where the second component is marks the request as request for a computation and the components are split by "|".
(it is required to first start ./ccn-nfn-relay)

If you want to perform computations on data it is required to start the service layer system.

As simple example you can also use the test/scripts/nfn examples which simulate the service layer system.
These scripts show how to setup a NFN environment to perform computations.
The test environment is:
		user ------ nfn-1 ------ nfn-2
	        	      |	 	CS:/test/data
			      |            |
			 service layer*    service layer*

* = service layer is simulated by a dummyanswer script.
The script test/scripts/nfn/compute_demo.sh creates this test environment and performs the computation "call 1 /test/data"
To use thunks the script test/scripts/nfn/compute_thunk_demo.sh can be used.


	
